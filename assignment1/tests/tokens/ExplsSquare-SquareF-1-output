{kind: eol_comment, spelling: " This file is part of www.nand2tetris.org\r"}
{kind: eol_comment, spelling: " and the book "The Elements of Computing Systems"\r"}
{kind: eol_comment, spelling: " by Nisan and Schocken, MIT Press.\r"}
{kind: eol_comment, spelling: " File name: projects/10/ExpressionlessSquare/Square.jack\r"}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: eol_comment, spelling: " Expressionless version of Square.jack.\r"}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: adhoc_comment, spelling: "*\r\n * The Square class implements a graphic square. A graphic square \r\n * has a location on the screen and a size. It also has methods \r\n * for drawing, erasing, moving on the screen, and changing its size.\r\n "}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: identifier, spelling: "class"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "Square"}
{kind: space, spelling: " "}
{kind: {, spelling: "{"}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: eol_comment, spelling: " Location on the screen\r"}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: identifier, spelling: "field"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "int"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "x"}
{kind: ,, spelling: ","}
{kind: space, spelling: " "}
{kind: identifier, spelling: "y"}
{kind: ;, spelling: ";"}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: eol_comment, spelling: " The size of the square\r"}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: identifier, spelling: "field"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "int"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "size"}
{kind: ;, spelling: ";"}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: eol_comment, spelling: " Constructs a new square with a given location and size.\r"}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: identifier, spelling: "constructor"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "Square"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "new"}
{kind: (, spelling: "("}
{kind: identifier, spelling: "int"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "Ax"}
{kind: ,, spelling: ","}
{kind: space, spelling: " "}
{kind: identifier, spelling: "int"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "Ay"}
{kind: ,, spelling: ","}
{kind: space, spelling: " "}
{kind: identifier, spelling: "int"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "Asize"}
{kind: ), spelling: ")"}
{kind: space, spelling: " "}
{kind: {, spelling: "{"}
{kind: carriage_return, spelling: "\r"}
{kind: newline, spelling: "\n"}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: space, spelling: " "}
{kind: identifier, spelling: "let"}
{kind: space, spelling: " "}
{kind: identifier, spelling: "x"}
{kind: space, spelling: " "}
Read 107 tokens
