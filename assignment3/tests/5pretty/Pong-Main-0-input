<class>
    <class-name>Main</class-name>
    <class-var-decs>
    </class-var-decs>
    <subr-decs>
        <subr>
            <function>
                <vtype>void</vtype>
                <name>main</name>
                <param-list>
                </param-list>
                <subr-body>
                    <var-decs>
                        <var-dec>
                            <var-segment>local</var-segment>
                            <var-name>game</var-name>
                            <var-offset>0</var-offset>
                            <var-type>PongGame</var-type>
                        </var-dec>
                    </var-decs>
                    <statements>
                        <statement>
                            <do>
                                <call-as-function>
                                    <class-name>PongGame</class-name>
                                    <subr-call>
                                        <subr-name>newInstance</subr-name>
                                        <expr-list>
                                        </expr-list>
                                    </subr-call>
                                </call-as-function>
                            </do>
                        </statement>
                        <statement>
                            <let>
                                <var>
                                    <var-segment>local</var-segment>
                                    <var-name>game</var-name>
                                    <var-offset>0</var-offset>
                                    <var-type>PongGame</var-type>
                                </var>
                                <expr>
                                    <term>
                                        <call-as-function>
                                            <class-name>PongGame</class-name>
                                            <subr-call>
                                                <subr-name>getInstance</subr-name>
                                                <expr-list>
                                                </expr-list>
                                            </subr-call>
                                        </call-as-function>
                                    </term>
                                </expr>
                            </let>
                        </statement>
                        <statement>
                            <do>
                                <call-as-method>
                                    <class-name>PongGame</class-name>
                                    <var>
                                        <var-segment>local</var-segment>
                                        <var-name>game</var-name>
                                        <var-offset>0</var-offset>
                                        <var-type>PongGame</var-type>
                                    </var>
                                    <subr-call>
                                        <subr-name>run</subr-name>
                                        <expr-list>
                                        </expr-list>
                                    </subr-call>
                                </call-as-method>
                            </do>
                        </statement>
                        <statement>
                            <do>
                                <call-as-method>
                                    <class-name>PongGame</class-name>
                                    <var>
                                        <var-segment>local</var-segment>
                                        <var-name>game</var-name>
                                        <var-offset>0</var-offset>
                                        <var-type>PongGame</var-type>
                                    </var>
                                    <subr-call>
                                        <subr-name>dispose</subr-name>
                                        <expr-list>
                                        </expr-list>
                                    </subr-call>
                                </call-as-method>
                            </do>
                        </statement>
                        <statement>
                            <return>
                            </return>
                        </statement>
                    </statements>
                </subr-body>
            </function>
        </subr>
    </subr-decs>
</class>
